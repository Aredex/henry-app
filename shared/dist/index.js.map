{"version":3,"file":"index.js","sources":["../src/hooks/usePagination/index.js","../src/hooks/useQueryWithPagination/index.js","../src/hooks/useGroups/GROUPS.js","../src/hooks/useGroups/index.js","../src/hooks/useUsers/USERS.js","../src/hooks/useUsers/index.js","../src/hooks/index.js"],"sourcesContent":["import { useCallback, useState } from 'react'\n\nexport default function usePagination(config) {\n  const initialValues = {\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    rowsPerPage: 5,\n    ...config\n  }\n  const [rowsPerPageOptions] = useState(initialValues.rowsPerPageOptions)\n  const [rowsPerPage, setRowsPerPage] = useState(initialValues.rowsPerPage)\n  const [page, setPage] = useState(0)\n  const onChangePage = useCallback((page) => {\n    setPage(page)\n  })\n  const onChangeRowsPerPage = useCallback((rows) => {\n    setRowsPerPage(rows)\n  })\n\n  return {\n    rowsPerPageOptions,\n    rowsPerPage,\n    page,\n    onChangePage,\n    onChangeRowsPerPage\n  }\n}\n","import { useLazyQuery } from '@apollo/client'\nimport { useCallback, useMemo } from 'react'\nimport usePagination from '../usePagination'\n\nexport default function useQueryWithPagination(\n  QUERY_DEFINITION,\n  variables,\n  config\n) {\n  const { where, order } = useMemo(() => ({ ...variables }), [variables])\n  const [execute, { loading, data, refetch }] = useLazyQuery(QUERY_DEFINITION)\n  const {\n    rowsPerPage,\n    rowsPerPageOptions,\n    page,\n    onChangePage,\n    onChangeRowsPerPage\n  } = usePagination(config)\n  const result = useMemo(() => data?.result || undefined, [data])\n  const count = useMemo(() => data?.count || undefined, [data])\n  const fetch = useCallback(\n    () =>\n      execute({\n        variables: {\n          where,\n          order,\n          limit: rowsPerPage,\n          offset: rowsPerPage * page\n        }\n      }),\n    [rowsPerPage, page]\n  )\n  return {\n    fetch,\n    result,\n    count,\n    loading,\n    refetch,\n    rowsPerPage,\n    rowsPerPageOptions,\n    page,\n    onChangePage,\n    onChangeRowsPerPage\n  }\n}\n","import { gql } from '@apollo/client'\n\nexport const GROUPS = gql`\n  query GROUPS($where: JSON, $limit: Int, $offset: Int, $order: JSON) {\n    result: groups(\n      where: $where\n      limit: $limit\n      offset: $offset\n      order: $order\n    ) {\n      id\n      name\n      type\n    }\n    count: countGroups(where: $where)\n  }\n`\n","import useQueryWithPagination from '../useQueryWithPagination'\nimport { GROUPS } from './GROUPS'\n\nexport default function useGroups(variables, config) {\n  const hook = useQueryWithPagination(GROUPS, variables, config)\n  return hook\n}\n","import { gql } from '@apollo/client'\n\nexport const USERS = gql`\n  query USERS($id: Int, $where: JSON, $limit: Int, $offset: Int, $order: JSON) {\n    result: users(\n      id: $id\n      where: $where\n      limit: $limit\n      offset: $offset\n      order: $order\n    ) {\n      id\n      givenName\n      familyName\n      nickName\n      email\n      photoUrl\n      roles {\n        id\n        name\n      }\n      cohortes {\n        id\n        name\n      }\n    }\n    count: countUsers(where: $where)\n  }\n`\n","import useQueryWithPagination from '../useQueryWithPagination'\nimport { USERS } from './USERS'\n\nexport default function useUsers(variables, config) {\n  const hook = useQueryWithPagination(USERS, variables, config)\n  return hook\n}\n","import useGroups from './useGroups'\nimport usePagination from './usePagination'\nimport useUsers from './useUsers'\n\nexport default {\n  useGroups,\n  usePagination,\n  useUsers\n}\n"],"names":["usePagination","config","initialValues","rowsPerPageOptions","rowsPerPage","useState","setRowsPerPage","page","setPage","onChangePage","useCallback","onChangeRowsPerPage","rows","useQueryWithPagination","QUERY_DEFINITION","variables","useMemo","where","order","useLazyQuery","execute","loading","data","refetch","result","undefined","count","fetch","limit","offset","GROUPS","gql","useGroups","hook","USERS","useUsers"],"mappings":"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"}