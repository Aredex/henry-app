{"version":3,"file":"index.modern.js","sources":["../src/hooks/usePagination/index.js","../src/hooks/useQueryWithPagination/index.js","../src/hooks/useGroups/GROUPS.js","../src/hooks/useGroups/index.js","../src/hooks/useUsers/USERS.js","../src/hooks/useUsers/index.js","../src/hooks/index.js"],"sourcesContent":["import { useCallback, useState } from 'react'\n\nexport default function usePagination(config) {\n  const initialValues = {\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    rowsPerPage: 5,\n    ...config\n  }\n  const [rowsPerPageOptions] = useState(initialValues.rowsPerPageOptions)\n  const [rowsPerPage, setRowsPerPage] = useState(initialValues.rowsPerPage)\n  const [page, setPage] = useState(0)\n  const onChangePage = useCallback((page) => {\n    setPage(page)\n  })\n  const onChangeRowsPerPage = useCallback((rows) => {\n    setRowsPerPage(rows)\n  })\n\n  return {\n    rowsPerPageOptions,\n    rowsPerPage,\n    page,\n    onChangePage,\n    onChangeRowsPerPage\n  }\n}\n","import { useLazyQuery } from '@apollo/client'\nimport { useCallback, useMemo } from 'react'\nimport usePagination from '../usePagination'\n\nexport default function useQueryWithPagination(\n  QUERY_DEFINITION,\n  variables,\n  config\n) {\n  const { where, order } = useMemo(() => ({ ...variables }), [variables])\n  const [execute, { loading, data, refetch }] = useLazyQuery(QUERY_DEFINITION)\n  const {\n    rowsPerPage,\n    rowsPerPageOptions,\n    page,\n    onChangePage,\n    onChangeRowsPerPage\n  } = usePagination(config)\n  const result = useMemo(() => data?.result || undefined, [data])\n  const count = useMemo(() => data?.count || undefined, [data])\n  const fetch = useCallback(\n    () =>\n      execute({\n        variables: {\n          where,\n          order,\n          limit: rowsPerPage,\n          offset: rowsPerPage * page\n        }\n      }),\n    [rowsPerPage, page]\n  )\n  return {\n    fetch,\n    result,\n    count,\n    loading,\n    refetch,\n    rowsPerPage,\n    rowsPerPageOptions,\n    page,\n    onChangePage,\n    onChangeRowsPerPage\n  }\n}\n","import { gql } from '@apollo/client'\n\nexport const GROUPS = gql`\n  query GROUPS($where: JSON, $limit: Int, $offset: Int, $order: JSON) {\n    result: groups(\n      where: $where\n      limit: $limit\n      offset: $offset\n      order: $order\n    ) {\n      id\n      name\n      type\n    }\n    count: countGroups(where: $where)\n  }\n`\n","import useQueryWithPagination from '../useQueryWithPagination'\nimport { GROUPS } from './GROUPS'\n\nexport default function useGroups(variables, config) {\n  const hook = useQueryWithPagination(GROUPS, variables, config)\n  return hook\n}\n","import { gql } from '@apollo/client'\n\nexport const USERS = gql`\n  query USERS($id: Int, $where: JSON, $limit: Int, $offset: Int, $order: JSON) {\n    result: users(\n      id: $id\n      where: $where\n      limit: $limit\n      offset: $offset\n      order: $order\n    ) {\n      id\n      givenName\n      familyName\n      nickName\n      email\n      photoUrl\n      roles {\n        id\n        name\n      }\n      cohortes {\n        id\n        name\n      }\n    }\n    count: countUsers(where: $where)\n  }\n`\n","import useQueryWithPagination from '../useQueryWithPagination'\nimport { USERS } from './USERS'\n\nexport default function useUsers(variables, config) {\n  const hook = useQueryWithPagination(USERS, variables, config)\n  return hook\n}\n","import useGroups from './useGroups'\nimport usePagination from './usePagination'\nimport useUsers from './useUsers'\n\nexport default {\n  useGroups,\n  usePagination,\n  useUsers\n}\n"],"names":["usePagination","config","initialValues","rowsPerPageOptions","rowsPerPage","useState","setRowsPerPage","page","setPage","onChangePage","useCallback","onChangeRowsPerPage","rows","useQueryWithPagination","QUERY_DEFINITION","variables","where","order","useMemo","execute","loading","data","refetch","useLazyQuery","result","undefined","count","fetch","limit","offset","GROUPS","gql","useGroups","hook","USERS","useUsers"],"mappings":"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"}