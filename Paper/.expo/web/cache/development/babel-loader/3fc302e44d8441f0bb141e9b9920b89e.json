{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/aredex/HENRY/henry-app/Paper/src/routers/AppRouter.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport DrawerLayout from \"../components/DrawerLayout/DrawerLayout\";\nimport HomeScreen from \"../screens/LoginScreen/LoginScreen\";\nimport SignUp from \"../screens/SignUp/SignUp\";\nimport Settings from \"../screens/Settings/Settings\";\nimport Cohorte from \"../screens/Cohorte/Cohorte\";\nimport Pm from \"../screens/Pm/Pm\";\nimport Grupos from \"../screens/Grupos/Grupos\";\nvar Drawer = createDrawerNavigator();\nvar LogInStack = createStackNavigator();\n\nvar AppRouter = function AppRouter(_ref) {\n  var handleTheme = _ref.handleTheme;\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      authenticated = _useSelector.authenticated;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      checking = _useState2[0],\n      setChecking = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n            case 2:\n              token = _context.sent;\n\n              if (token) {\n                console.log(token);\n              }\n\n              setChecking(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, 1000);\n  }, []);\n\n  if (checking) {\n    return React.createElement(React.Fragment, null, \" Loading \");\n  }\n\n  return React.createElement(React.Fragment, null, authenticated ? React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerLayout, _extends({}, props, {\n        handleTheme: handleTheme,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }));\n    },\n    initialRouteName: \"Cohorte\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Settings\",\n    component: Settings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Cohorte\",\n    component: Cohorte,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Pm\",\n    component: Pm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Grupos\",\n    component: Grupos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })) : React.createElement(LogInStack.Navigator, {\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(LogInStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(LogInStack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default AppRouter;","map":{"version":3,"sources":["/home/aredex/HENRY/henry-app/Paper/src/routers/AppRouter.js"],"names":["React","useState","useEffect","useSelector","createDrawerNavigator","createStackNavigator","AsyncStorage","DrawerLayout","HomeScreen","SignUp","Settings","Cohorte","Pm","Grupos","Drawer","LogInStack","AppRouter","handleTheme","state","auth","authenticated","checking","setChecking","setTimeout","getItem","token","console","log","props"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport DrawerLayout from \"../components/DrawerLayout/DrawerLayout\";\nimport HomeScreen from \"../screens/LoginScreen/LoginScreen\";\nimport SignUp from \"../screens/SignUp/SignUp\";\nimport Settings from \"../screens/Settings/Settings\";\nimport Cohorte from \"../screens/Cohorte/Cohorte\";\nimport Pm from \"../screens/Pm/Pm\";\nimport Grupos from \"../screens/Grupos/Grupos\";\n\n// import { initialize } from \"../dispatchers/auth\";\n\nconst Drawer = createDrawerNavigator();\nconst LogInStack = createStackNavigator();\n\nconst AppRouter = ({ handleTheme }) => {\n  const { authenticated } = useSelector((state) => state.auth);\n  const [checking, setChecking] = useState(true);\n\n  useEffect(() => {\n    setTimeout(async () => {\n      const token = await AsyncStorage.getItem(\"token\");\n      if (token) {\n        console.log(token);\n      }\n      setChecking(true);\n    }, 1000);\n  }, []);\n\n  if (checking) {\n    return <> Loading </>;\n  }\n\n  return (\n    <>\n      {authenticated ? (\n        <Drawer.Navigator\n          drawerContent={(props) => (\n            <DrawerLayout {...props} handleTheme={handleTheme} />\n          )}\n          initialRouteName=\"Cohorte\"\n        >\n          <Drawer.Screen name=\"Settings\" component={Settings} />\n          <Drawer.Screen name=\"Cohorte\" component={Cohorte} />\n          <Drawer.Screen name=\"Pm\" component={Pm} />\n          <Drawer.Screen name=\"Grupos\" component={Grupos} />\n        </Drawer.Navigator>\n      ) : (\n        <LogInStack.Navigator headerMode=\"none\">\n          <LogInStack.Screen name=\"Home\" component={HomeScreen} />\n          <LogInStack.Screen name=\"SignUp\" component={SignUp} />\n        </LogInStack.Navigator>\n      )}\n    </>\n  );\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}