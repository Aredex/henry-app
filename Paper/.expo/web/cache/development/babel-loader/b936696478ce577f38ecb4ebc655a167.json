{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/aredex/HENRY/henry-app/Paper/src/routes/AppRouter.js\";\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { signInWithToken, initialize, signOut } from \"../dispatchers/auth\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DrawerRoutes from \"./DrawerRoutes/DrawerRoutes\";\nimport LogRoutes from \"./LogRoutes/LogRoutes\";\n\nvar AppRouter = function AppRouter(_ref) {\n  var handleTheme = _ref.handleTheme;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      authenticated = _useSelector.authenticated;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.ui;\n  }),\n      loading = _useSelector2.loading;\n\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n            case 2:\n              token = _context.sent;\n\n              if (token) {\n                dispatch(signInWithToken(token));\n                initialize(token);\n              } else {\n                dispatch(signOut());\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, 1000);\n  }, []);\n\n  if (loading) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \" Loading \");\n  }\n\n  return React.createElement(React.Fragment, null, authenticated ? React.createElement(DrawerRoutes, {\n    handleTheme: handleTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }) : React.createElement(LogRoutes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default AppRouter;","map":{"version":3,"sources":["/home/aredex/HENRY/henry-app/Paper/src/routes/AppRouter.js"],"names":["React","useEffect","useDispatch","useSelector","AsyncStorage","signInWithToken","initialize","signOut","DrawerRoutes","LogRoutes","AppRouter","handleTheme","dispatch","state","auth","authenticated","ui","loading","setTimeout","getItem","token"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,OAAtC;;AAEA,OAAOC,YAAP;AACA,OAAOC,SAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AACrC,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AADqC,qBAGXC,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHA;AAAA,MAG7BC,aAH6B,gBAG7BA,aAH6B;;AAAA,sBAIjBZ,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACG,EAAjB;AAAA,GAAD,CAJM;AAAA,MAI7BC,OAJ6B,iBAI7BA,OAJ6B;;AAMrChB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACWd,YAAY,CAACe,OAAb,CAAqB,OAArB,CADX;;AAAA;AACHC,cAAAA,KADG;;AAET,kBAAIA,KAAJ,EAAW;AACTR,gBAAAA,QAAQ,CAACP,eAAe,CAACe,KAAD,CAAhB,CAAR;AACAd,gBAAAA,UAAU,CAACc,KAAD,CAAV;AACD,eAHD,MAGO;AACLR,gBAAAA,QAAQ,CAACL,OAAO,EAAR,CAAR;AACD;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,EAQP,IARO,CAAV;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAIU,OAAJ,EAAa;AACX,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAED,SACE,0CACGF,aAAa,GACZ,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEJ,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AASD,CA/BD;;AAiCA,eAAeD,SAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport { signInWithToken, initialize, signOut } from \"../dispatchers/auth\";\nimport { Text } from \"react-native\";\nimport DrawerRoutes from \"./DrawerRoutes/DrawerRoutes\";\nimport LogRoutes from \"./LogRoutes/LogRoutes\";\n\nconst AppRouter = ({ handleTheme }) => {\n  const dispatch = useDispatch();\n\n  const { authenticated } = useSelector((state) => state.auth);\n  const { loading } = useSelector((state) => state.ui);\n\n  useEffect(() => {\n    setTimeout(async () => {\n      const token = await AsyncStorage.getItem(\"token\");\n      if (token) {\n        dispatch(signInWithToken(token));\n        initialize(token);\n      } else {\n        dispatch(signOut());\n      }\n    }, 1000);\n  }, []);\n\n  if (loading) {\n    return <Text> Loading </Text>;\n  }\n\n  return (\n    <>\n      {authenticated ? (\n        <DrawerRoutes handleTheme={handleTheme} />\n      ) : (\n        <LogRoutes />\n      )}\n    </>\n  );\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}