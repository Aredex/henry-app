{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { authSetError, login, logout } from \"../actions/auth\";\nexport var REACT_APP_API = \"http://localhost:3001\";\nexport var signOut = function signOut() {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(logout());\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"token\"));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var initialize = function initialize(localUser) {\n  Axios.defaults.baseURL = REACT_APP_API;\n\n  if (localUser && localUser.token) {\n    Axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + localUser.token;\n  } else {\n    Axios.defaults.headers.common[\"Authorization\"] = \"\";\n  }\n};\nexport var signInWithEmail = function signInWithEmail(username, password) {\n  return function _callee2(dispatch) {\n    var _await$Axios$post, data, user, token, response;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Axios.post(REACT_APP_API + \"/auth/email\", {\n              username: username,\n              password: password\n            }));\n\n          case 3:\n            _await$Axios$post = _context2.sent;\n            data = _await$Axios$post.data;\n\n            if (!data) {\n              _context2.next = 10;\n              break;\n            }\n\n            user = data.user, token = data.token;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", JSON.stringify(token)));\n\n          case 9:\n            dispatch(login(user.id, user, token));\n\n          case 10:\n            _context2.next = 17;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            response = _context2.t0.response;\n            dispatch(logout());\n            dispatch(authSetError(response.data.message));\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};\nexport var signInWithToken = function signInWithToken(token) {\n  return function _callee3(dispatch) {\n    var _await$Axios$get, data, response;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Axios.get(REACT_APP_API + \"/auth/me\", {\n              headers: {\n                Authorization: \"Bearer \" + token\n              }\n            }));\n\n          case 3:\n            _await$Axios$get = _context3.sent;\n            data = _await$Axios$get.data;\n\n            if (!data) {\n              _context3.next = 9;\n              break;\n            }\n\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", JSON.stringify(token)));\n\n          case 8:\n            dispatch(login(data.id, data, token));\n\n          case 9:\n            _context3.next = 16;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            response = _context3.t0.response;\n            dispatch(logout());\n            dispatch(authSetError(response.data.message));\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var signInWithGoogle = function signInWithGoogle() {\n  if (window) {\n    window.location = REACT_APP_API + \"/auth/google\";\n  }\n};\nexport var signInWithGithub = function signInWithGithub() {\n  if (window) {\n    window.location = REACT_APP_API + \"/auth/github\";\n  }\n};","map":{"version":3,"sources":["/home/aredex/HENRY/henry-app/Paper/src/dispatchers/auth.js"],"names":["Axios","AsyncStorage","authSetError","login","logout","REACT_APP_API","signOut","dispatch","removeItem","initialize","localUser","defaults","baseURL","token","headers","common","signInWithEmail","username","password","post","data","user","setItem","JSON","stringify","id","response","message","signInWithToken","get","Authorization","signInWithGoogle","window","location","signInWithGithub"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { authSetError, login, logout } from \"../actions/auth\";\n\nexport const REACT_APP_API = \"http://localhost:3001\";\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    dispatch(logout());\n    await AsyncStorage.removeItem(\"token\");\n  };\n};\n\nexport const initialize = (localUser) => {\n  Axios.defaults.baseURL = REACT_APP_API;\n\n  if (localUser && localUser.token) {\n    Axios.defaults.headers.common[\n      \"Authorization\"\n    ] = `Bearer ${localUser.token}`;\n  } else {\n    Axios.defaults.headers.common[\"Authorization\"] = ``;\n  }\n};\n\nexport const signInWithEmail = (username, password) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await Axios.post(`${REACT_APP_API}/auth/email`, {\n        username,\n        password,\n      });\n\n      if (data) {\n        const { user, token } = data;\n\n        await AsyncStorage.setItem(\"token\", JSON.stringify(token));\n        dispatch(login(user.id, user, token));\n      }\n    } catch ({ response }) {\n      dispatch(logout());\n      dispatch(authSetError(response.data.message));\n    }\n  };\n};\n\nexport const signInWithToken = (token) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await Axios.get(`${REACT_APP_API}/auth/me`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (data) {\n        await AsyncStorage.setItem(\"token\", JSON.stringify(token));\n        dispatch(login(data.id, data, token));\n      }\n    } catch ({ response }) {\n      dispatch(logout());\n      dispatch(authSetError(response.data.message));\n    }\n  };\n};\n\nexport const signInWithGoogle = () => {\n  if (window) {\n    window.location = `${REACT_APP_API}/auth/google`;\n  }\n};\n\nexport const signInWithGithub = () => {\n  if (window) {\n    window.location = `${REACT_APP_API}/auth/github`;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}